{"version":3,"file":"deep-merge-bundle.iife.js","sources":["../node_modules/leapond-deepcopy/dist/deep-copy-bundle.es.js","../node_modules/leapond-js-utils/index.js","../src/index.js"],"sourcesContent":["var toStr = Object.prototype.toString;\nvar mergeTypes = {'[object Object]': 1, '[object Array]': 2, '[object Set]': 3, '[object Map]': 4};\n\nfunction getMergeType(target) {\n  return target &&\n      typeof target === 'object' &&\n      // make Leapond Classes not be copy/merged\n      !('CID' in target) &&\n      mergeTypes[toStr.call(target)] ||\n      0\n}\n\n/**\n * Object, Array, Set, Map supported deep copy.\n * @param target\n * @param {number} [depthMax]\n * @return {Map<any, any>|Set<any>|*[]|*}\n */\nfunction deepCopy(target, depthMax) {\n  if ( depthMax === void 0 ) depthMax = Infinity;\n\n  if (!target) { return target }\n  var args = arguments, typeTarget = args[2], depthCurrent = args[3] || 0, aLoops = args[4], dest, v;\n  if (!(typeTarget > -1)) { typeTarget = getMergeType(target); }\n  if (!typeTarget || depthCurrent >= depthMax) { return target }\n\n  depthCurrent++;\n\n  aLoops = aLoops ? aLoops.concat( [target]) : [target];\n\n  switch (typeTarget) {\n    case 1:\n    case 2:\n      dest = typeTarget === 1 ? {} : [];\n      Object.keys(target).forEach(function (k) {\n        v = target[k];\n        dest[k] = aLoops.includes(v) ? v : deepCopy(v, depthMax, -1, depthCurrent, aLoops);\n      });\n      return dest\n    case 3:\n      dest = new Set;\n      target.forEach(function (v) {\n        dest.add(deepCopy(v, depthMax, -1, depthCurrent, aLoops));\n      });\n      return dest\n    case 4:\n      dest = new Map;\n      target.forEach(function (v, k) {\n        dest.set(k, deepCopy(v, depthMax, -1, depthCurrent, aLoops));\n      });\n      return dest\n  }\n  return target\n}\n\nexport default deepCopy;\n//# sourceMappingURL=deep-copy-bundle.es.js.map\n","const toStr = Object.prototype.toString\nconst mergeTypes = {'[object Object]': 1, '[object Array]': 2, '[object Set]': 3, '[object Map]': 4}\n\nfunction getMergeType(target) {\n  return target &&\n      typeof target === 'object' &&\n      // make Leapond Classes not be copy/merged\n      !('CID' in target) &&\n      mergeTypes[toStr.call(target)] ||\n      0\n}\n\nexport {toStr, getMergeType}","import deepCopy from \"leapond-deepcopy\";\nimport {getMergeType} from \"leapond-js-utils\";\n\n\nconst INNER_MARK = Symbol(''/*<DEV*/ + 'INNER'/*DEV>*/)\n/**\n * @property ARRAY_NORMAL - write by deepMerge\n * @property ARRAY_NORMAL_FIXED - existed item will be readonly, but can increase new item\n * @property ARRAY_CONCAT - concat to target array\n * @property ARRAY_CONCAT_UNIQ - concat to target array, but skip existed item\n * @property ARRAY_REPLACE - replace whole array\n * @property ARRAY_SEAL - fixed length\n * @property ARRAY_FREEZE - ignore source\n */\nconst arrayMergePolicies = {\n  ARRAY_NORMAL: 1,\n  ARRAY_NORMAL_FIXED: 1.1,\n  ARRAY_CONCAT: 2,\n  ARRAY_CONCAT_UNIQ: 2.1,\n  ARRAY_REPLACE: 3,\n  ARRAY_SEAL: 4,\n  ARRAY_FREEZE: 5\n}\nconst optionsDefault = {\n  [INNER_MARK]: 1,\n  clone: -Infinity,\n  unEnumerableInclude: false,\n  arrayPolicy: arrayMergePolicies.ARRAY_NORMAL,\n  // (a, b) => a.push(b) && a\n  arrayMerge: undefined,\n  deepMap: true\n}\n\n/**\n * @typedef mergeOptions\n * @property {boolean|number} [clone=-Infinity] - if clone target. <br/>> true for all, false for none, <br/>> number<0 for reuse depth, number>0 for clone depth\n * @property {boolean} [unEnumerableInclude=false] - if include keys not enumerable(and Symbol keys)\n * @property {arrayMergePolicies} [arrayPolicy=ARRAY_NORMAL] - array merge policy of build-in\n * @property {function} [arrayMerge] - custom array merger, (a, b) => result\n * @property {boolean} [deepMap=true] - if dig in Map items\n */\n\n/**\n * @param target\n * @param source\n * @param {mergeOptions} [options]\n * @return {*|{}|[]|[]}\n */\nfunction deepMerge(target, source, options) {\n  let isRoot = true, aLoops, depthCurrent = 0, typeTarget = getMergeType(target), typeSource = getMergeType(source)\n  // clone source while target type is not same with source\n  if (!typeTarget || typeTarget !== typeSource) return source\n  // detect root and merge options\n  if (options && options[INNER_MARK]) isRoot = false; else options = parseOptions(options)\n  // init loop circle and depth recorder\n  if (isRoot || arguments[4]) { // arguments[4] is passed by batch()\n    // create new loops\n    aLoops = [source]\n    depthCurrent = aLoops.depthCurrent = 1\n  } else {\n    // concat loops\n    const aLoopsPrev = arguments[3]\n    aLoops = [...aLoopsPrev, source]\n    // detect circled loops\n    if (aLoopsPrev.includes(source)) return source\n    // increase current depth\n    depthCurrent = aLoopsPrev.depthCurrent + 1\n  }\n  // clone source while target is empty\n  if (!target) return source\n\n  // store current depth on loops array property\n  aLoops.depthCurrent = depthCurrent\n\n  // clone target current level\n  if ((options.clone > 0 && depthCurrent <= options.clone) || (options.clone < 0 && depthCurrent > -options.clone)) target = deepCopy(target, 1)\n\n  switch (typeSource) {\n    case 1: // Object\n      let keys\n      if (options.unEnumerableInclude) keys = [...Object.getOwnPropertyNames(source), ...Object.getOwnPropertySymbols(source)]; else keys = Object.keys(source)\n      keys.forEach(key => {\n        target[key] = deepMerge(target[key], source[key], options, aLoops)\n      })\n      break\n    case 2: // Array\n      if (options.arrayMerge) return options.arrayMerge(target, source)\n\n      switch (options.arrayPolicy) {\n        case arrayMergePolicies.ARRAY_FREEZE:\n          return target\n        case arrayMergePolicies.ARRAY_SEAL:\n        case arrayMergePolicies.ARRAY_NORMAL:\n        case arrayMergePolicies.ARRAY_NORMAL_FIXED:\n          Object.keys(source).forEach(key => {\n            if (key in target) {\n              if (options.arrayPolicy === arrayMergePolicies.ARRAY_NORMAL_FIXED) return\n            } else if (options.arrayPolicy === arrayMergePolicies.ARRAY_SEAL) return\n\n            target[key] = deepMerge(target[key], source[key], options, aLoops)\n          })\n          break;\n        case arrayMergePolicies.ARRAY_REPLACE:\n          return source\n        case arrayMergePolicies.ARRAY_CONCAT:\n          source.forEach((v, i) => {\n            target.push(deepMerge(target[i], v, options, aLoops))\n          })\n          break\n        case arrayMergePolicies.ARRAY_CONCAT_UNIQ:\n          source.forEach((v, i) => {\n            !target.includes(v) && target.push(deepMerge(target[i], v, options, aLoops))\n          })\n      }\n      break\n    case 3:\n      source.forEach(v => target.add(v))\n      break\n    case 4:\n      source.forEach((v, k) => target.set(k, options.deepMap ? deepMerge(target.get(k), v, options, aLoops) : v))\n      break\n  }\n  return target\n}\n\n/**\n *\n * @param {Object[]} aTargets\n * @param {mergeOptions} [options]\n * @return {*}\n */\ndeepMerge.batch = function (aTargets, options) {\n  options = parseOptions(options)\n  return aTargets.reduce((a, b) => deepMerge(a, b, options, null, true))\n}\n\nfunction parseOptions(options) {\n  options = Object.assign({}, optionsDefault, options)\n  if (options.clone === true) options.clone = Infinity; else if (!(options.clone >= -Infinity)) options.clone = optionsDefault.clone\n  return options\n}\n\nObject.assign(deepMerge, arrayMergePolicies)\n\nexport default deepMerge"],"names":["toStr","mergeTypes","getMergeType","const","let"],"mappings":"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"}